1. data preprocessor

    Objective: determine the weight of each branch(map childrenNum -> weight)

    File: preprocessor.js

    Method: 
    1. getTreeData (recursive function)

        a. traverse all person and assign new colors to their gender [man, woman, unknown]
        b. find all unique research areas, store them inside a set
        c. store researcher's name and their coresponding mentee number inside a map

    2. calculate some important values

        a. sum = suming up all the mentee number inside the map
        b. max = the maximum number inside the map
        c. min = the minimum number inside the map
        d. range_mean = (max - min) / 2 
      
    3.  oversampling/undersampling (for loop)

        reason for doing this is that when plotting the trees using the original weights, some mentor have too many mentees, but other may have very few, make the tree look bad :)
        show some math equation below:

        """
        weight = w 
        children_num = cn
        range_mean = rm
       
        Original equation:
        w_i = cn_i / sum

        New equation:
        [I tried serveral ways to calculate the weight while preserve the most information about the children_num distribution, this equation yields the best result]

        w_i = [cn_i - |cn_i - rm| * 0.1] / sum ,(cn_i > rm)

              cn_i / sum, (cn_i = rm)

              [cn_i + |cn_i - rm| * 0.1] / sum ,(cn_i < rm)
              
        """ 
            
    3. iterate the map and calculate the weight of each person using the equation above,
        replace children_num with weight inside the map
        

    4. addWeight(recursive function) 
        a. traverse all the researchers and add the calculated weight to each of them
    

======================

2. Tree Implementation

    Objective: plot the tree using p5js

    File: tree.js, index.html

    Method: 




